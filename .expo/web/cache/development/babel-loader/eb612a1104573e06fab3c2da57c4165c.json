{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\filip\\\\Desktop\\\\news-app-react-native-main\\\\App.js\";\n\nimport React, { useState, useEffect } from 'react';\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\n\nvar App = function App() {\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      search = _useState2[0],\n      setSearch = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      filteredDataSource = _useState4[0],\n      setFilteredDataSource = _useState4[1];\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      masterDataSource = _useState6[0],\n      setMasterDataSource = _useState6[1];\n\n  useEffect(function () {\n    fetch('https://jsonplaceholder.typicode.com/posts').then(function (response) {\n      return response.json();\n    }).then(function (responseJson) {\n      setFilteredDataSource(responseJson);\n      setMasterDataSource(responseJson);\n    }).catch(function (error) {\n      console.error(error);\n    });\n  }, []);\n\n  var searchFilterFunction = function searchFilterFunction(text) {\n    if (text) {\n      var newData = masterDataSource.filter(function (item) {\n        var itemData = item.title ? item.title.toUpperCase() : ''.toUpperCase();\n        var textData = text.toUpperCase();\n        return itemData.indexOf(textData) > -1;\n      });\n      setFilteredDataSource(newData);\n      setSearch(text);\n    } else {\n      setFilteredDataSource(masterDataSource);\n      setSearch(text);\n    }\n  };\n\n  var ItemView = function ItemView(_ref) {\n    var item = _ref.item;\n    return React.createElement(Text, {\n      style: styles.itemStyle,\n      onPress: function onPress() {\n        return getItem(item);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 7\n      }\n    }, item.id, '.', item.title.toUpperCase());\n  };\n\n  var ItemSeparatorView = function ItemSeparatorView() {\n    return React.createElement(View, {\n      style: {\n        height: 0.5,\n        width: '100%',\n        backgroundColor: '#C8C8C8'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 7\n      }\n    });\n  };\n\n  var getItem = function getItem(item) {\n    alert('Id : ' + item.id + ' Title : ' + item.title);\n  };\n\n  return React.createElement(SafeAreaView, {\n    style: {\n      flex: 1\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 7\n    }\n  }, React.createElement(TextInput, {\n    style: styles.textInputStyle,\n    onChangeText: function onChangeText(text) {\n      return searchFilterFunction(text);\n    },\n    value: search,\n    underlineColorAndroid: \"transparent\",\n    placeholder: \"Search Here\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 9\n    }\n  }), React.createElement(FlatList, {\n    data: filteredDataSource,\n    keyExtractor: function keyExtractor(item, index) {\n      return index.toString();\n    },\n    ItemSeparatorComponent: ItemSeparatorView,\n    renderItem: ItemView,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 9\n    }\n  })));\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    backgroundColor: 'white'\n  },\n  itemStyle: {\n    padding: 10\n  },\n  textInputStyle: {\n    height: 40,\n    borderWidth: 1,\n    paddingLeft: 20,\n    margin: 5,\n    borderColor: '#009688',\n    backgroundColor: '#FFFFFF'\n  }\n});\nexport default App;","map":{"version":3,"sources":["C:/Users/filip/Desktop/news-app-react-native-main/App.js"],"names":["React","useState","useEffect","App","search","setSearch","filteredDataSource","setFilteredDataSource","masterDataSource","setMasterDataSource","fetch","then","response","json","responseJson","catch","error","console","searchFilterFunction","text","newData","filter","item","itemData","title","toUpperCase","textData","indexOf","ItemView","styles","itemStyle","getItem","id","ItemSeparatorView","height","width","backgroundColor","alert","flex","container","textInputStyle","index","toString","StyleSheet","create","padding","borderWidth","paddingLeft","margin","borderColor"],"mappings":"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","sourcesContent":["// import React from \"react\";\n\n// import { NavigationContainer } from \"@react-navigation/native\";\n// import { createStackNavigator } from \"@react-navigation/stack\";\n// import NewsDetails from \"./components/NewsCard/NewsDetails\";\n// import TopNewsUs from \"./components/TopNews/TopNewsUs\";\n// import TopNewsGb from \"./components/TopNews/TopNewsGb\";\n// import Home from \"./components/Home\";\n// import SearchUs from \"./components/Search/SearchUs\";\n// import SearchGb from \"./components/Search/SearchGb\";\n// import CategoriesUs from \"./components/Category/CategoriesUs\";\n// import CategoriesGb from \"./components/Category/CategoriesGb\";\n// import entertaimentUS from \"./components/SingleCategory/uscat/entertaiment\";\n// import generalUs from \"./components/SingleCategory/uscat/general\";\n// import healthUs from \"./components/SingleCategory/uscat/health\";\n// import scienceUs from \"./components/SingleCategory/uscat/science\";\n// import techUs from \"./components/SingleCategory/uscat/technology\";\n// import entertaimentGb from \"./components/SingleCategory/gbcat/entertaiment\";\n// import generalGb from \"./components/SingleCategory/gbcat/general\";\n// import healthGb from \"./components/SingleCategory/gbcat/health\";\n// import scienceGb from \"./components/SingleCategory/gbcat/science\";\n// import techGb from \"./components/SingleCategory/gbcat/technology\";\n// const Stack = createStackNavigator();\n\n// function App() {\n// \treturn (\n// \t\t<NavigationContainer>\n// \t\t\t<Stack.Navigator>\n// \t\t\t\t<Stack.Screen\n// \t\t\t\t\tname=\"Home\"\n// \t\t\t\t\tcomponent={Home}\n// \t\t\t\t\toptions={{ headerShown: false }}\n// \t\t\t\t/>\n// \t\t\t\t<Stack.Screen\n// \t\t\t\t\tname=\"TopNewsUs\"\n// \t\t\t\t\tcomponent={TopNewsUs}\n// \t\t\t\t\toptions={{ headerShown: false }}\n// \t\t\t\t/>\n// \t\t\t\t<Stack.Screen\n// \t\t\t\t\tname=\"TopNewsGb\"\n// \t\t\t\t\tcomponent={TopNewsGb}\n// \t\t\t\t\toptions={{ headerShown: false }}\n// \t\t\t\t/>\n// \t\t\t\t<Stack.Screen\n// \t\t\t\t\tname=\"CategoriesUs\"\n// \t\t\t\t\tcomponent={CategoriesUs}\n// \t\t\t\t\toptions={{ headerShown: false }}\n// \t\t\t\t/>\n// \t\t\t\t<Stack.Screen\n// \t\t\t\t\tname=\"CategoriesGb\"\n// \t\t\t\t\tcomponent={CategoriesGb}\n// \t\t\t\t\toptions={{ headerShown: false }}\n// \t\t\t\t/>\n// \t\t\t\t<Stack.Screen name=\"NewsDetails\" component={NewsDetails} />\n// \t\t\t\t<Stack.Screen\n// \t\t\t\t\tname=\"SearchUs\"\n// \t\t\t\t\tcomponent={SearchUs}\n// \t\t\t\t\toptions={{ headerShown: false }}\n// \t\t\t\t/>\n// \t\t\t\t<Stack.Screen\n// \t\t\t\t\tname=\"SearchGb\"\n// \t\t\t\t\tcomponent={SearchGb}\n// \t\t\t\t\toptions={{ headerShown: false }}\n// \t\t\t\t/>\n// \t\t\t\t<Stack.Screen\n// \t\t\t\t\tname=\"entertaimentUS\"\n// \t\t\t\t\tcomponent={entertaimentUS}\n// \t\t\t\t\toptions={{ headerShown: false }}\n// \t\t\t\t/>\n// \t\t\t\t<Stack.Screen\n// \t\t\t\t\tname=\"generalUs\"\n// \t\t\t\t\tcomponent={generalUs}\n// \t\t\t\t\toptions={{ headerShown: false }}\n// \t\t\t\t/>\n// \t\t\t\t<Stack.Screen\n// \t\t\t\t\tname=\"healthUs\"\n// \t\t\t\t\tcomponent={healthUs}\n// \t\t\t\t\toptions={{ headerShown: false }}\n// \t\t\t\t/>\n// \t\t\t\t<Stack.Screen\n// \t\t\t\t\tname=\"scienceUs\"\n// \t\t\t\t\tcomponent={scienceUs}\n// \t\t\t\t\toptions={{ headerShown: false }}\n// \t\t\t\t/>\n// \t\t\t\t<Stack.Screen\n// \t\t\t\t\tname=\"techUs\"\n// \t\t\t\t\tcomponent={techUs}\n// \t\t\t\t\toptions={{ headerShown: false }}\n// \t\t\t\t/>\n// \t\t\t\t<Stack.Screen\n// \t\t\t\t\tname=\"entertaimentGb\"\n// \t\t\t\t\tcomponent={entertaimentGb}\n// \t\t\t\t\toptions={{ headerShown: false }}\n// \t\t\t\t/>\n// \t\t\t\t<Stack.Screen\n// \t\t\t\t\tname=\"techGb\"\n// \t\t\t\t\tcomponent={techGb}\n// \t\t\t\t\toptions={{ headerShown: false }}\n// \t\t\t\t/>\n// \t\t\t\t<Stack.Screen\n// \t\t\t\t\tname=\"scienceGb\"\n// \t\t\t\t\tcomponent={scienceGb}\n// \t\t\t\t\toptions={{ headerShown: false }}\n// \t\t\t\t/>\n// \t\t\t\t<Stack.Screen\n// \t\t\t\t\tname=\"healthGb\"\n// \t\t\t\t\tcomponent={healthGb}\n// \t\t\t\t\toptions={{ headerShown: false }}\n// \t\t\t\t/>\n// \t\t\t\t<Stack.Screen\n// \t\t\t\t\tname=\"genGb\"\n// \t\t\t\t\tcomponent={generalGb}\n// \t\t\t\t\toptions={{ headerShown: false }}\n// \t\t\t\t/>\n// \t\t\t</Stack.Navigator>\n// \t\t</NavigationContainer>\n// \t);\n// }\n\n// export default App;\n// import React in our code\nimport React, {useState, useEffect} from 'react';\n\n// import all the components we are going to use\nimport {\n  SafeAreaView,\n  Text,\n  StyleSheet,\n  View,\n  FlatList,\n  TextInput,\n} from 'react-native';\n\nconst App = () => {\n  const [search, setSearch] = useState('');\n  const [filteredDataSource, setFilteredDataSource] = useState([]);\n  const [masterDataSource, setMasterDataSource] = useState([]);\n\n  useEffect(() => {\n    fetch('https://jsonplaceholder.typicode.com/posts')\n      .then((response) => response.json())\n      .then((responseJson) => {\n        setFilteredDataSource(responseJson);\n        setMasterDataSource(responseJson);\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  }, []);\n\n  const searchFilterFunction = (text) => {\n    // Check if searched text is not blank\n    if (text) {\n      // Inserted text is not blank\n      // Filter the masterDataSource\n      // Update FilteredDataSource\n      const newData = masterDataSource.filter(\n        function (item) {\n          const itemData = item.title\n            ? item.title.toUpperCase()\n            : ''.toUpperCase();\n          const textData = text.toUpperCase();\n          return itemData.indexOf(textData) > -1;\n      });\n      setFilteredDataSource(newData);\n      setSearch(text);\n    } else {\n      // Inserted text is blank\n      // Update FilteredDataSource with masterDataSource\n      setFilteredDataSource(masterDataSource);\n      setSearch(text);\n    }\n  };\n\n  const ItemView = ({item}) => {\n    return (\n      // Flat List Item\n      <Text\n        style={styles.itemStyle}\n        onPress={() => getItem(item)}>\n        {item.id}\n        {'.'}\n        {item.title.toUpperCase()}\n      </Text>\n    );\n  };\n\n  const ItemSeparatorView = () => {\n    return (\n      // Flat List Item Separator\n      <View\n        style={{\n          height: 0.5,\n          width: '100%',\n          backgroundColor: '#C8C8C8',\n        }}\n      />\n    );\n  };\n\n  const getItem = (item) => {\n    // Function for click on an item\n    alert('Id : ' + item.id + ' Title : ' + item.title);\n  };\n\n  return (\n    <SafeAreaView style={{flex: 1}}>\n      <View style={styles.container}>\n        <TextInput\n          style={styles.textInputStyle}\n          onChangeText={(text) => searchFilterFunction(text)}\n          value={search}\n          underlineColorAndroid=\"transparent\"\n          placeholder=\"Search Here\"\n        />\n        <FlatList\n          data={filteredDataSource}\n          keyExtractor={(item, index) => index.toString()}\n          ItemSeparatorComponent={ItemSeparatorView}\n          renderItem={ItemView}\n        />\n      </View>\n    </SafeAreaView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    backgroundColor: 'white',\n  },\n  itemStyle: {\n    padding: 10,\n  },\n  textInputStyle: {\n    height: 40,\n    borderWidth: 1,\n    paddingLeft: 20,\n    margin: 5,\n    borderColor: '#009688',\n    backgroundColor: '#FFFFFF',\n  },\n});\n\nexport default App;"]},"metadata":{},"sourceType":"module"}