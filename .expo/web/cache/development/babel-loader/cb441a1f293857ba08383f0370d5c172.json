{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\filip\\\\Desktop\\\\news-app-react-native-main\\\\components\\\\TopNews.js\";\n\nimport React, { useState, useEffect } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport NewsCards from \"./NewsCards\";\nimport Colors from \"../constants/Colors\";\nimport Env from \"../constants/Env\";\nimport { useNavigation } from \"@react-navigation/native\";\n\nvar main = function main() {\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      newsData = _useState2[0],\n      setNewsData = _useState2[1];\n\n  var _useState3 = useState(),\n      _useState4 = _slicedToArray(_useState3, 2),\n      errorMessage = _useState4[0],\n      setErrorMessage = _useState4[1];\n\n  var load = function load() {\n    var newsApi, response, responseJson;\n    return _regeneratorRuntime.async(function load$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            newsApi = \"http://newsapi.org/v2/top-headlines?country=us&apiKey=\" + Env.NEWS_API_KEY;\n            _context.next = 4;\n            return _regeneratorRuntime.awrap(fetch(newsApi));\n\n          case 4:\n            response = _context.sent;\n            _context.next = 7;\n            return _regeneratorRuntime.awrap(response.json());\n\n          case 7:\n            responseJson = _context.sent;\n\n            if (response.ok) {\n              setNewsData(responseJson.articles);\n            } else setErrorMessage(responseJson.message);\n\n            _context.next = 15;\n            break;\n\n          case 11:\n            _context.prev = 11;\n            _context.t0 = _context[\"catch\"](0);\n            console.log(\"Error\", _context.t0);\n            setErrorMessage(_context.t0.message);\n\n          case 15:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 11]], Promise);\n  };\n\n  useEffect(function () {\n    load();\n  }, []);\n\n  var renderItem = function renderItem(_ref) {\n    var item = _ref.item;\n    return React.createElement(NewsCards, {\n      title: item.title,\n      description: item.description,\n      urlToImage: item.urlToImage,\n      content: item.content,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 3\n      }\n    });\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 3\n    }\n  }, React.createElement(StatusBar, {\n    backgroundColor: Colors.primary,\n    barStyle: \"default\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 4\n    }\n  }), React.createElement(View, {\n    style: styles.header,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 4\n    }\n  }, \"Top News US\"), newsData ? React.createElement(FlatList, {\n    data: newsData,\n    renderItem: renderItem,\n    keyExtractor: function keyExtractor(item) {\n      return item.publishedAt;\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }\n  }) : errorMessage && React.createElement(Text, {\n    style: styles.errMsg,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 21\n    }\n  }, \"Error: \", errorMessage));\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: Colors.primary\n  },\n  header: {\n    height: 50,\n    backgroundColor: Colors.primary,\n    alignItems: \"center\"\n  },\n  title: {\n    fontSize: 28,\n    color: \"white\"\n  },\n  errMsg: {\n    fontSize: 18,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    color: \"white\"\n  }\n});\nexport default main;","map":{"version":3,"sources":["C:/Users/filip/Desktop/news-app-react-native-main/components/TopNews.js"],"names":["React","useState","useEffect","NewsCards","Colors","Env","useNavigation","main","newsData","setNewsData","errorMessage","setErrorMessage","load","newsApi","NEWS_API_KEY","fetch","response","json","responseJson","ok","articles","message","console","log","renderItem","item","title","description","urlToImage","content","styles","container","primary","header","publishedAt","errMsg","StyleSheet","create","flex","backgroundColor","height","alignItems","fontSize","color","justifyContent"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { StyleSheet, StatusBar, Text, View, FlatList } from \"react-native\";\r\nimport NewsCards from \"./NewsCards\";\r\nimport Colors from \"../constants/Colors\";\r\nimport Env from \"../constants/Env\";\r\nimport { useNavigation } from \"@react-navigation/native\";\r\n\r\nconst main = () => {\r\n\tconst [newsData, setNewsData] = useState();\r\n\tconst [errorMessage, setErrorMessage] = useState();\r\n\r\n\tconst load = async () => {\r\n\t\ttry {\r\n\t\t\tconst newsApi = `http://newsapi.org/v2/top-headlines?country=us&apiKey=${Env.NEWS_API_KEY}`;\r\n\t\t\tconst response = await fetch(newsApi);\r\n\t\t\tconst responseJson = await response.json();\r\n\r\n\t\t\tif (response.ok) {\r\n\t\t\t\tsetNewsData(responseJson.articles);\r\n\t\t\t} else setErrorMessage(responseJson.message);\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log(\"Error\", error);\r\n\t\t\tsetErrorMessage(error.message);\r\n\t\t}\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tload();\r\n\t}, []);\r\n\r\n\tconst renderItem = ({ item }) => (\r\n\t\t<NewsCards\r\n\t\t\ttitle={item.title}\r\n\t\t\tdescription={item.description}\r\n\t\t\turlToImage={item.urlToImage}\r\n\t\t\tcontent={item.content}\r\n\t\t/>\r\n\t);\r\n\r\n\treturn (\r\n\t\t<View style={styles.container}>\r\n\t\t\t<StatusBar backgroundColor={Colors.primary} barStyle=\"default\" />\r\n\t\t\t<View style={styles.header}>Top News US</View>\r\n\t\t\t{newsData ? (\r\n\t\t\t\t<FlatList\r\n\t\t\t\t\tdata={newsData}\r\n\t\t\t\t\trenderItem={renderItem}\r\n\t\t\t\t\tkeyExtractor={(item) => item.publishedAt}\r\n\t\t\t\t/>\r\n\t\t\t) : (\r\n\t\t\t\terrorMessage && <Text style={styles.errMsg}>Error: {errorMessage}</Text>\r\n\t\t\t)}\r\n\t\t</View>\r\n\t);\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n\tcontainer: {\r\n\t\tflex: 1,\r\n\t\tbackgroundColor: Colors.primary,\r\n\t},\r\n\theader: {\r\n\t\theight: 50,\r\n\t\tbackgroundColor: Colors.primary,\r\n\t\talignItems: \"center\",\r\n\t},\r\n\ttitle: {\r\n\t\tfontSize: 28,\r\n\t\tcolor: \"white\",\r\n\t},\r\n\terrMsg: {\r\n\t\tfontSize: 18,\r\n\t\tjustifyContent: \"center\",\r\n\t\talignItems: \"center\",\r\n\t\tcolor: \"white\",\r\n\t},\r\n});\r\n\r\nexport default main;\r\n"]},"metadata":{},"sourceType":"module"}