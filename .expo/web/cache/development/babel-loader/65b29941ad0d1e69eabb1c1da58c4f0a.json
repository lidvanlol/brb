{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\filip\\\\Desktop\\\\news-app-react-native-main\\\\components\\\\Search.js\";\nimport Env from \"../constants/Env\";\nimport { StatusBar } from \"expo-status-bar\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport React, { useState, useEffect } from \"react\";\nimport { TextInput } from \"react-native-paper\";\nexport default function App() {\n  var _this = this;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      data = _useState2[0],\n      setData = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      query = _useState4[0],\n      setQuery = _useState4[1];\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      heroes = _useState6[0],\n      setHeroes = _useState6[1];\n\n  useEffect(function () {\n    fetchData();\n  }, []);\n\n  var fetchData = function fetchData() {\n    var res, json;\n    return _regeneratorRuntime.async(function fetchData$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(fetch(\"https://api.opendota.com/api/heroes\"));\n\n          case 2:\n            res = _context.sent;\n            _context.next = 5;\n            return _regeneratorRuntime.awrap(res.json());\n\n          case 5:\n            json = _context.sent;\n            setData(json);\n            setHeroes(json.slice());\n\n          case 8:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var filterNames = function filterNames(hero) {\n    console.log(heroes.length);\n    var search = query.toLowerCase().replace(/ /g, \"_\");\n\n    if (hero.name.startsWith(search, 14)) {\n      return formatNames(hero);\n    } else {\n      heroes.splice(heroes.indexOf(hero), 1);\n      return null;\n    }\n  };\n\n  var formatNames = function formatNames(hero) {\n    var heroName = hero.name.charAt(14).toUpperCase() + hero.name.slice(15);\n    heroName = heroName.replace(/_/g, \" \");\n    return heroName;\n  };\n\n  var updateQuery = function updateQuery(input) {\n    setHeroes(data.slice());\n    setQuery(input);\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 3\n    }\n  }, React.createElement(Text, {\n    style: styles.heading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 4\n    }\n  }, \"Search Hero\"), React.createElement(TextInput, {\n    onChangeText: updateQuery,\n    value: query,\n    placeholder: \"Type Here...\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 4\n    }\n  }), React.createElement(FlatList, {\n    data: heroes,\n    keyExtractor: function keyExtractor(i) {\n      return i.id.toString();\n    },\n    extraData: query,\n    renderItem: function renderItem(_ref) {\n      var item = _ref.item;\n      return React.createElement(Text, {\n        style: styles.flatList,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 6\n        }\n      }, filterNames(item));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 4\n    }\n  }));\n}\nvar styles = StyleSheet.create({\n  container: {\n    marginBottom: 45\n  },\n  heading: {\n    marginTop: 50,\n    marginBottom: 10,\n    marginLeft: 15,\n    fontSize: 25\n  },\n  flatList: {\n    paddingLeft: 15,\n    marginTop: 15,\n    paddingBottom: 15,\n    fontSize: 20,\n    borderBottomColor: \"#26a69a\",\n    borderBottomWidth: 1\n  }\n});","map":{"version":3,"sources":["C:/Users/filip/Desktop/news-app-react-native-main/components/Search.js"],"names":["Env","StatusBar","React","useState","useEffect","TextInput","App","data","setData","query","setQuery","heroes","setHeroes","fetchData","fetch","res","json","slice","filterNames","hero","console","log","length","search","toLowerCase","replace","name","startsWith","formatNames","splice","indexOf","heroName","charAt","toUpperCase","updateQuery","input","styles","container","heading","i","id","toString","item","flatList","StyleSheet","create","marginBottom","marginTop","marginLeft","fontSize","paddingLeft","paddingBottom","borderBottomColor","borderBottomWidth"],"mappings":"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","sourcesContent":["// import React, { useState, useEffect } from \"react\";\r\n// import {\r\n// \tStyleSheet,\r\n// \tStatusBar,\r\n// \tText,\r\n// \tView,\r\n// \tFlatList,\r\n// \tButton,\r\n// \tTextInput,\r\n// } from \"react-native\";\r\n// import NewsCards from \"./NewsCards\";\r\n// import Colors from \"../constants/Colors\";\r\nimport Env from \"../constants/Env\";\r\n// import { useNavigation } from \"@react-navigation/native\";\r\n// import { Appbar } from \"react-native-paper\";\r\n\r\n// const search = () => {\r\n// \tconst [errorMessage, setErrorMessage] = useState();\r\n// \tconst navigation = useNavigation();\r\n// \tconst [searchValue, setSearchValue] = useState(\"\");\r\n// \tconst [searchResults, setSearchResults] = useState(null);\r\n\r\n// \tconst searchHandler = async () => {\r\n// \t\ttry {\r\n// \t\t\tconst search = `http://newsapi.org/v2/top-headlines?country=us&q=${searchValue}&apiKey=${Env.NEWS_API_KEY}`;\r\n// \t\t\tconst response = await fetch(search);\r\n// \t\t\tconst responseJson = await response.json();\r\n// \t\t\tif (response.ok) {\r\n// \t\t\t\tsetSearchResults(responseJson.articles);\r\n// \t\t\t} else setErrorMessage(responseJson.message);\r\n// \t\t} catch (error) {\r\n// \t\t\tconsole.log(\"Error\", error);\r\n// \t\t\tsetErrorMessage(error.message);\r\n// \t\t}\r\n// \t};\r\n\r\n// \tuseEffect(() => {\r\n// \t\tsearchHandler();\r\n// \t}, []);\r\n\r\n// \t// const load = async () => {\r\n// \t// \ttry {\r\n// \t// \t\tconst newsApi = `http://newsapi.org/v2/top-headlines?country=us&apiKey=${Env.NEWS_API_KEY}`;\r\n// \t// \t\tconst response = await fetch(newsApi);\r\n// \t// \t\tconst responseJson = await response.json();\r\n\r\n// \t// \t\tif (response.ok) {\r\n// \t// \t\t\tsetNewsData(responseJson.articles);\r\n// \t// \t\t} else setErrorMessage(responseJson.message);\r\n// \t// \t} catch (error) {\r\n// \t// \t\tconsole.log(\"Error\", error);\r\n// \t// \t\tsetErrorMessage(error.message);\r\n// \t// \t}\r\n// \t// };\r\n\r\n// \t// useEffect(() => {\r\n// \t// \tload();\r\n// \t// }, []);\r\n\r\n// \tconst renderItem = ({ item }) => (\r\n// \t\t<NewsCards\r\n// \t\t\ttitle={item.title}\r\n// \t\t\tdescription={item.description}\r\n// \t\t\turlToImage={item.urlToImage}\r\n// \t\t\tcontent={item.content}\r\n// \t\t/>\r\n// \t);\r\n\r\n// \treturn (\r\n// \t\t<View style={styles.container}>\r\n// \t\t\t<StatusBar backgroundColor={Colors.primary} barStyle=\"default\" />\r\n// \t\t\t<Appbar style={styles.appbar}>\r\n// \t\t\t\t<Appbar.BackAction onPress={() => navigation.goBack()} />\r\n\r\n// \t\t\t\t<View style={styles.right}>\r\n// \t\t\t\t\t<Button\r\n// \t\t\t\t\t\ttitle=\"us\"\r\n// \t\t\t\t\t\tstyle={styles.topBtn}\r\n// \t\t\t\t\t\tonPress={() => {\r\n// \t\t\t\t\t\t\tnavigation.navigate(\"main\");\r\n// \t\t\t\t\t\t}}\r\n// \t\t\t\t\t/>\r\n\r\n// \t\t\t\t\t<Button\r\n// \t\t\t\t\t\tstyle={styles.topBtn}\r\n// \t\t\t\t\t\ttitle=\"gb\"\r\n// \t\t\t\t\t\tonPress={() => {\r\n// \t\t\t\t\t\t\tnavigation.navigate(\"mainGB\");\r\n// \t\t\t\t\t\t}}\r\n// \t\t\t\t\t></Button>\r\n// \t\t\t\t</View>\r\n// \t\t\t</Appbar>\r\n// \t\t\t<TextInput\r\n// \t\t\t\tplaceholder=\"Search\"\r\n// \t\t\t\tonChange={setSearchValue}\r\n// \t\t\t\tonSubmitEditing={searchHandler}\r\n// \t\t\t\tplaceholderTextColor={\"#888888\"}\r\n// \t\t\t\tstyle={styles.search}\r\n// \t\t\t/>\r\n\r\n// \t\t\t<Text style={styles.title}>Search Top News In ... by Term</Text>\r\n\r\n// \t\t\t{searchResults ? (\r\n// \t\t\t\t<FlatList\r\n// \t\t\t\t\tdata={searchResults}\r\n// \t\t\t\t\trenderItem={renderItem}\r\n// \t\t\t\t\tkeyExtractor={(item) => item.publishedAt}\r\n// \t\t\t\t/>\r\n// \t\t\t) : (\r\n// \t\t\t\terrorMessage && <Text style={styles.errMsg}>Error: {errorMessage}</Text>\r\n// \t\t\t)}\r\n// \t\t</View>\r\n// \t);\r\n// };\r\n\r\n// const styles = StyleSheet.create({\r\n// \tcontainer: {\r\n// \t\tflex: 1,\r\n// \t\tbackgroundColor: Colors.primary,\r\n// \t},\r\n// \ttitle: {\r\n// \t\tfontSize: 24,\r\n// \t\tfontWeight: \"bold\",\r\n// \t\tcolor: \"white\",\r\n// \t\ttextAlign: \"center\",\r\n// \t\tmarginTop: 20,\r\n// \t\tmarginBottom: 20,\r\n// \t},\r\n\r\n// \terrMsg: {\r\n// \t\tfontSize: 18,\r\n// \t\tjustifyContent: \"center\",\r\n// \t\talignItems: \"center\",\r\n// \t\tcolor: \"white\",\r\n// \t},\r\n// \theader: {\r\n// \t\tcolor: \"white\",\r\n// \t\talignItems: \"center\",\r\n// \t\tfontWeight: \"bold\",\r\n// \t\ttextAlign: \"center\",\r\n// \t\tmarginTop: 20,\r\n// \t\tmarginBottom: 20,\r\n// \t\tfontSize: 30,\r\n// \t},\r\n// \tsearch: {\r\n// \t\twidth: \"100%\",\r\n// \t\tbackgroundColor: \"white\",\r\n// \t\theight: 80,\r\n// \t\tpadding: 10,\r\n// \t\tfontSize: 30,\r\n// \t},\r\n// \tappbar: {\r\n// \t\tdisplay: \"flex\",\r\n// \t\tflexDirection: \"row\",\r\n// \t},\r\n\r\n// \tappbar: {\r\n// \t\tposition: \"relative\",\r\n// \t\tflexDirection: \"row\",\r\n// \t},\r\n// \tright: {\r\n// \t\tposition: \"absolute\",\r\n// \t\tright: 10,\r\n// \t\tflexDirection: \"row\",\r\n// \t},\r\n// \trightButtons: {\r\n// \t\talignSelf: \"flex-end\",\r\n// \t\tflex: 1,\r\n// \t},\r\n// \ttopBtn: {},\r\n// });\r\n\r\n// export default search;\r\nimport { StatusBar } from \"expo-status-bar\";\r\nimport { StyleSheet, Text, View, FlatList } from \"react-native\";\r\n\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { TextInput } from \"react-native-paper\";\r\n\r\nexport default function App() {\r\n\tconst [data, setData] = useState([]);\r\n\tconst [query, setQuery] = useState(\"\");\r\n\tconst [heroes, setHeroes] = useState([]);\r\n\r\n\tuseEffect(() => {\r\n\t\tfetchData();\r\n\t}, []);\r\n\r\n\tconst fetchData = async () => {\r\n\t\tconst res = await fetch(\"https://api.opendota.com/api/heroes\");\r\n\t\tconst json = await res.json();\r\n\t\tsetData(json);\r\n\t\tsetHeroes(json.slice());\r\n\t};\r\n\r\n\tconst filterNames = (hero) => {\r\n\t\tconsole.log(heroes.length);\r\n\t\tlet search = query.toLowerCase().replace(/ /g, \"_\");\r\n\t\tif (hero.name.startsWith(search, 14)) {\r\n\t\t\treturn formatNames(hero);\r\n\t\t} else {\r\n\t\t\theroes.splice(heroes.indexOf(hero), 1);\r\n\t\t\treturn null;\r\n\t\t}\r\n\t};\r\n\r\n\tconst formatNames = (hero) => {\r\n\t\tlet heroName = hero.name.charAt(14).toUpperCase() + hero.name.slice(15);\r\n\t\theroName = heroName.replace(/_/g, \" \");\r\n\t\treturn heroName;\r\n\t};\r\n\r\n\tconst updateQuery = (input) => {\r\n\t\tsetHeroes(data.slice());\r\n\t\tsetQuery(input);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<View style={styles.container}>\r\n\t\t\t<Text style={styles.heading}>Search Hero</Text>\r\n\t\t\t<TextInput\r\n\t\t\t\tonChangeText={updateQuery}\r\n\t\t\t\tvalue={query}\r\n\t\t\t\tplaceholder=\"Type Here...\"\r\n\t\t\t/>\r\n\t\t\t<FlatList\r\n\t\t\t\tdata={heroes}\r\n\t\t\t\tkeyExtractor={(i) => i.id.toString()}\r\n\t\t\t\textraData={query}\r\n\t\t\t\trenderItem={({ item }) => (\r\n\t\t\t\t\t<Text style={styles.flatList}>{filterNames(item)}</Text>\r\n\t\t\t\t)}\r\n\t\t\t/>\r\n\t\t</View>\r\n\t);\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n\tcontainer: {\r\n\t\tmarginBottom: 45,\r\n\t},\r\n\theading: {\r\n\t\tmarginTop: 50,\r\n\t\tmarginBottom: 10,\r\n\t\tmarginLeft: 15,\r\n\t\tfontSize: 25,\r\n\t},\r\n\tflatList: {\r\n\t\tpaddingLeft: 15,\r\n\t\tmarginTop: 15,\r\n\t\tpaddingBottom: 15,\r\n\t\tfontSize: 20,\r\n\t\tborderBottomColor: \"#26a69a\",\r\n\t\tborderBottomWidth: 1,\r\n\t},\r\n});\r\n"]},"metadata":{},"sourceType":"module"}