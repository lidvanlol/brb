{"ast":null,"code":"","map":{"version":3,"sources":[],"names":[],"mappings":"","sourcesContent":["// import React, { useState, useEffect } from \"react\";\r\n// import {\r\n// \tStyleSheet,\r\n// \tStatusBar,\r\n// \tText,\r\n// \tView,\r\n// \tFlatList,\r\n// \tButton,\r\n// \tTextInput,\r\n// } from \"react-native\";\r\n// import NewsCards from \"./NewsCards\";\r\n// import Colors from \"../constants/Colors\";\r\n// import Env from \"../constants/Env\";\r\n// import { useNavigation } from \"@react-navigation/native\";\r\n// import { Appbar } from \"react-native-paper\";\r\n\r\n// const search = () => {\r\n// \tconst [errorMessage, setErrorMessage] = useState();\r\n// \tconst navigation = useNavigation();\r\n// \tconst [searchValue, setSearchValue] = useState(\"\");\r\n// \tconst [searchResults, setSearchResults] = useState(null);\r\n\r\n// \tconst searchHandler = async () => {\r\n// \t\ttry {\r\n// \t\t\tconst search = `http://newsapi.org/v2/top-headlines?country=us&q=${searchValue}&apiKey=${Env.NEWS_API_KEY}`;\r\n// \t\t\tconst response = await fetch(search);\r\n// \t\t\tconst responseJson = await response.json();\r\n// \t\t\tif (response.ok) {\r\n// \t\t\t\tsetSearchResults(responseJson.articles);\r\n// \t\t\t} else setErrorMessage(responseJson.message);\r\n// \t\t} catch (error) {\r\n// \t\t\tconsole.log(\"Error\", error);\r\n// \t\t\tsetErrorMessage(error.message);\r\n// \t\t}\r\n// \t};\r\n\r\n// \tuseEffect(() => {\r\n// \t\tsearchHandler();\r\n// \t}, []);\r\n\r\n// \t// const load = async () => {\r\n// \t// \ttry {\r\n// \t// \t\tconst newsApi = `http://newsapi.org/v2/top-headlines?country=us&apiKey=${Env.NEWS_API_KEY}`;\r\n// \t// \t\tconst response = await fetch(newsApi);\r\n// \t// \t\tconst responseJson = await response.json();\r\n\r\n// \t// \t\tif (response.ok) {\r\n// \t// \t\t\tsetNewsData(responseJson.articles);\r\n// \t// \t\t} else setErrorMessage(responseJson.message);\r\n// \t// \t} catch (error) {\r\n// \t// \t\tconsole.log(\"Error\", error);\r\n// \t// \t\tsetErrorMessage(error.message);\r\n// \t// \t}\r\n// \t// };\r\n\r\n// \t// useEffect(() => {\r\n// \t// \tload();\r\n// \t// }, []);\r\n\r\n// \tconst renderItem = ({ item }) => (\r\n// \t\t<NewsCards\r\n// \t\t\ttitle={item.title}\r\n// \t\t\tdescription={item.description}\r\n// \t\t\turlToImage={item.urlToImage}\r\n// \t\t\tcontent={item.content}\r\n// \t\t/>\r\n// \t);\r\n\r\n// \treturn (\r\n// \t\t<View style={styles.container}>\r\n// \t\t\t<StatusBar backgroundColor={Colors.primary} barStyle=\"default\" />\r\n// \t\t\t<Appbar style={styles.appbar}>\r\n// \t\t\t\t<Appbar.BackAction onPress={() => navigation.goBack()} />\r\n\r\n// \t\t\t\t<View style={styles.right}>\r\n// \t\t\t\t\t<Button\r\n// \t\t\t\t\t\ttitle=\"us\"\r\n// \t\t\t\t\t\tstyle={styles.topBtn}\r\n// \t\t\t\t\t\tonPress={() => {\r\n// \t\t\t\t\t\t\tnavigation.navigate(\"main\");\r\n// \t\t\t\t\t\t}}\r\n// \t\t\t\t\t/>\r\n\r\n// \t\t\t\t\t<Button\r\n// \t\t\t\t\t\tstyle={styles.topBtn}\r\n// \t\t\t\t\t\ttitle=\"gb\"\r\n// \t\t\t\t\t\tonPress={() => {\r\n// \t\t\t\t\t\t\tnavigation.navigate(\"mainGB\");\r\n// \t\t\t\t\t\t}}\r\n// \t\t\t\t\t></Button>\r\n// \t\t\t\t</View>\r\n// \t\t\t</Appbar>\r\n// \t\t\t<TextInput\r\n// \t\t\t\tplaceholder=\"Search\"\r\n// \t\t\t\tonChange={setSearchValue}\r\n// \t\t\t\tonSubmitEditing={searchHandler}\r\n// \t\t\t\tplaceholderTextColor={\"#888888\"}\r\n// \t\t\t\tstyle={styles.search}\r\n// \t\t\t/>\r\n\r\n// \t\t\t<Text style={styles.title}>Search Top News In ... by Term</Text>\r\n\r\n// \t\t\t{searchResults ? (\r\n// \t\t\t\t<FlatList\r\n// \t\t\t\t\tdata={searchResults}\r\n// \t\t\t\t\trenderItem={renderItem}\r\n// \t\t\t\t\tkeyExtractor={(item) => item.publishedAt}\r\n// \t\t\t\t/>\r\n// \t\t\t) : (\r\n// \t\t\t\terrorMessage && <Text style={styles.errMsg}>Error: {errorMessage}</Text>\r\n// \t\t\t)}\r\n// \t\t</View>\r\n// \t);\r\n// };\r\n\r\n// const styles = StyleSheet.create({\r\n// \tcontainer: {\r\n// \t\tflex: 1,\r\n// \t\tbackgroundColor: Colors.primary,\r\n// \t},\r\n// \ttitle: {\r\n// \t\tfontSize: 24,\r\n// \t\tfontWeight: \"bold\",\r\n// \t\tcolor: \"white\",\r\n// \t\ttextAlign: \"center\",\r\n// \t\tmarginTop: 20,\r\n// \t\tmarginBottom: 20,\r\n// \t},\r\n\r\n// \terrMsg: {\r\n// \t\tfontSize: 18,\r\n// \t\tjustifyContent: \"center\",\r\n// \t\talignItems: \"center\",\r\n// \t\tcolor: \"white\",\r\n// \t},\r\n// \theader: {\r\n// \t\tcolor: \"white\",\r\n// \t\talignItems: \"center\",\r\n// \t\tfontWeight: \"bold\",\r\n// \t\ttextAlign: \"center\",\r\n// \t\tmarginTop: 20,\r\n// \t\tmarginBottom: 20,\r\n// \t\tfontSize: 30,\r\n// \t},\r\n// \tsearch: {\r\n// \t\twidth: \"100%\",\r\n// \t\tbackgroundColor: \"white\",\r\n// \t\theight: 80,\r\n// \t\tpadding: 10,\r\n// \t\tfontSize: 30,\r\n// \t},\r\n// \tappbar: {\r\n// \t\tdisplay: \"flex\",\r\n// \t\tflexDirection: \"row\",\r\n// \t},\r\n\r\n// \tappbar: {\r\n// \t\tposition: \"relative\",\r\n// \t\tflexDirection: \"row\",\r\n// \t},\r\n// \tright: {\r\n// \t\tposition: \"absolute\",\r\n// \t\tright: 10,\r\n// \t\tflexDirection: \"row\",\r\n// \t},\r\n// \trightButtons: {\r\n// \t\talignSelf: \"flex-end\",\r\n// \t\tflex: 1,\r\n// \t},\r\n// \ttopBtn: {},\r\n// });\r\n\r\n// export default search;\r\n"]},"metadata":{},"sourceType":"script"}