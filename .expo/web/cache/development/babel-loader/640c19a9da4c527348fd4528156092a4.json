{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\filip\\\\Desktop\\\\news-app-react-native-main\\\\components\\\\Categories.js\";\nimport React from \"react\";\nimport Text from \"react-native-web/dist/exports/Text\";\n\nfunction Categories() {\n  var _this = this;\n\n  var _useState = useState(ALL_CATEGORIES),\n      _useState2 = _slicedToArray(_useState, 2),\n      categories = _useState2[0],\n      setCategories = _useState2[1];\n\n  var PAGE_SIZE = 10;\n\n  var _useState3 = useState({\n    entertainment: [],\n    general: [],\n    health: [],\n    science: [],\n    sport: [],\n    technology: []\n  }),\n      _useState4 = _slicedToArray(_useState3, 2),\n      news = _useState4[0],\n      setNews = _useState4[1];\n\n  var ALL_CATEGORIES = [{\n    id: \"0\",\n    name: \"Entertainment\",\n    value: \"entertainment\"\n  }, {\n    id: \"1\",\n    name: \"General\",\n    value: \"general\"\n  }, {\n    id: \"2\",\n    name: \"Health\",\n    value: \"health\"\n  }, {\n    id: \"3\",\n    name: \"Science\",\n    value: \"science\"\n  }, {\n    id: \"4\",\n    name: \"Sport\",\n    value: \"sport\"\n  }, {\n    id: \"5\",\n    name: \"Technology\",\n    value: \"technology\"\n  }];\n\n  var getNewsFromCategory = function getNewsFromCategory() {\n    var routeForEntertainment, routeForGeneral, routeForHealth, routeForScience, routeForSport, routeForTechnology, getNewsFromEntertainment, getNewsFromGeneral, getNewsForHealth, getNewsForScience, getNewsForSport, getNewsForTechnology;\n    return _regeneratorRuntime.async(function getNewsFromCategory$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            routeForEntertainment = \"http://newsapi.org/v2/top-headlines?country=us&category=\" + \"entertainment\" + \"&pageSize=\" + PAGE_SIZE + \"&apikey=538c9131d90042bca87ded5431fee3ea\";\n            routeForGeneral = API_HOST + \"?country=\" + country + \"&category=\" + \"general\" + \"&pageSize=\" + PAGE_SIZE + \"&apikey=\" + API_KEY;\n            routeForHealth = API_HOST + \"?country=\" + country + \"&category=\" + \"health\" + \"&pageSize=\" + PAGE_SIZE + \"&apikey=\" + API_KEY;\n            routeForScience = API_HOST + \"?country=\" + country + \"&category=\" + \"science\" + \"&pageSize=\" + PAGE_SIZE + \"&apikey=\" + API_KEY;\n            routeForSport = API_HOST + \"?country=\" + country + \"&category=\" + \"sport\" + \"&pageSize=\" + PAGE_SIZE + \"&apikey=\" + API_KEY;\n            routeForTechnology = API_HOST + \"?country=\" + country + \"&category=\" + \"technology\" + \"&pageSize=\" + PAGE_SIZE + \"&apikey=\" + API_KEY;\n            _context.next = 8;\n            return _regeneratorRuntime.awrap(axios.get(routeForEntertainment));\n\n          case 8:\n            getNewsFromEntertainment = _context.sent;\n            _context.next = 11;\n            return _regeneratorRuntime.awrap(axios.get(routeForGeneral));\n\n          case 11:\n            getNewsFromGeneral = _context.sent;\n            _context.next = 14;\n            return _regeneratorRuntime.awrap(axios.get(routeForHealth));\n\n          case 14:\n            getNewsForHealth = _context.sent;\n            _context.next = 17;\n            return _regeneratorRuntime.awrap(axios.get(routeForScience));\n\n          case 17:\n            getNewsForScience = _context.sent;\n            _context.next = 20;\n            return _regeneratorRuntime.awrap(axios.get(routeForSport));\n\n          case 20:\n            getNewsForSport = _context.sent;\n            _context.next = 23;\n            return _regeneratorRuntime.awrap(axios.get(routeForTechnology));\n\n          case 23:\n            getNewsForTechnology = _context.sent;\n\n            try {\n              axios.all([getNewsFromEntertainment, getNewsFromGeneral, getNewsForHealth, getNewsForScience, getNewsForSport, getNewsForTechnology]).then(axios.spread(function () {\n                for (var _len = arguments.length, responses = new Array(_len), _key = 0; _key < _len; _key++) {\n                  responses[_key] = arguments[_key];\n                }\n\n                setNews({\n                  entertainment: responses[0].data.articles,\n                  general: responses[1].data.articles,\n                  health: responses[2].data.articles,\n                  science: responses[3].data.articles,\n                  sport: responses[4].data.articles,\n                  technology: responses[5].data.articles\n                });\n              }));\n            } catch (error) {\n              console.log(error);\n            }\n\n          case 25:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  useEffect(function () {\n    getNewsFromCategory();\n  }, [country]);\n\n  var renderItem = function renderItem(_ref) {\n    var item = _ref.item;\n    return React.createElement(NewsCards, {\n      title: item.title,\n      description: item.description,\n      urlToImage: item.urlToImage,\n      content: item.content,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 3\n      }\n    });\n  };\n\n  return React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 9\n    }\n  }, \"HAHAH\");\n}\n\nexport default Categories;","map":{"version":3,"sources":["C:/Users/filip/Desktop/news-app-react-native-main/components/Categories.js"],"names":["React","Categories","useState","ALL_CATEGORIES","categories","setCategories","PAGE_SIZE","entertainment","general","health","science","sport","technology","news","setNews","id","name","value","getNewsFromCategory","routeForEntertainment","routeForGeneral","API_HOST","country","API_KEY","routeForHealth","routeForScience","routeForSport","routeForTechnology","axios","get","getNewsFromEntertainment","getNewsFromGeneral","getNewsForHealth","getNewsForScience","getNewsForSport","getNewsForTechnology","all","then","spread","responses","data","articles","error","console","log","useEffect","renderItem","item","title","description","urlToImage","content"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { Text } from \"react-native\";\r\nfunction Categories() {\r\n\r\n const [categories, setCategories] = useState(ALL_CATEGORIES);\r\nconst PAGE_SIZE = 10;\r\n const [news, setNews] = useState({\r\n\t\tentertainment: [],\r\n\t\tgeneral: [],\r\n\t\thealth: [],\r\n\t\tscience: [],\r\n\t\tsport: [],\r\n\t\ttechnology: [],\r\n });\r\n\r\n\r\n\r\nconst ALL_CATEGORIES = [\r\n\t{\r\n\t\tid: \"0\",\r\n\t\tname: \"Entertainment\",\r\n\t\tvalue: \"entertainment\",\r\n\t\t\r\n\t},\r\n\t{\r\n\t\tid: \"1\",\r\n\t\tname: \"General\",\r\n\t\tvalue: \"general\",\r\n\t\t\r\n\t},\r\n\t{\r\n\t\tid: \"2\",\r\n\t\tname: \"Health\",\r\n\t\tvalue: \"health\",\r\n\t\t\r\n\t},\r\n\t{\r\n\t\tid: \"3\",\r\n\t\tname: \"Science\",\r\n\t\tvalue: \"science\",\r\n\t\t\r\n\t},\r\n\t{\r\n\t\tid: \"4\",\r\n\t\tname: \"Sport\",\r\n\t\tvalue: \"sport\",\r\n\t\t\r\n\t},\r\n\t{\r\n\t\tid: \"5\",\r\n\t\tname: \"Technology\",\r\n\t\tvalue: \"technology\",\r\n\t\t\r\n\t},\r\n];\r\n\r\n\t\r\n\t// const [newsData, setNewsData] = useState();\r\n\t// const [errorMessage, setErrorMessage] = useState();\r\n\t// const navigation = useNavigation();\r\n\t// const load = async () => {\r\n\t// \ttry {\r\n\t// \t\tconst newsApi = `http://newsapi.org/v2/top-headlines?country=us&apiKey=${Env.NEWS_API_KEY}`;\r\n\t// \t\tconst response = await fetch(newsApi);\r\n\t// \t\tconst responseJson = await response.json();\r\n\r\n\t// \t\tif (response.ok) {\r\n\t// \t\t\tsetNewsData(responseJson.articles);\r\n\t// \t\t} else setErrorMessage(responseJson.message);\r\n\t// \t} catch (error) {\r\n\t// \t\tconsole.log(\"Error\", error);\r\n\t// \t\tsetErrorMessage(error.message);\r\n\t// \t}\r\n\t// };\r\n\r\n\t// useEffect(() => {\r\n\t// \tload();\r\n\t// }, []);\r\n\r\nconst getNewsFromCategory = async () => {\r\n\tconst routeForEntertainment = `http://newsapi.org/v2/top-headlines?country=us&category=${\"entertainment\"}&pageSize=${PAGE_SIZE}&apikey=538c9131d90042bca87ded5431fee3ea`;\r\n\tconst routeForGeneral = `${API_HOST}?country=${country}&category=${\"general\"}&pageSize=${PAGE_SIZE}&apikey=${API_KEY}`;\r\n\tconst routeForHealth = `${API_HOST}?country=${country}&category=${\"health\"}&pageSize=${PAGE_SIZE}&apikey=${API_KEY}`;\r\n\tconst routeForScience = `${API_HOST}?country=${country}&category=${\"science\"}&pageSize=${PAGE_SIZE}&apikey=${API_KEY}`;\r\n\tconst routeForSport = `${API_HOST}?country=${country}&category=${\"sport\"}&pageSize=${PAGE_SIZE}&apikey=${API_KEY}`;\r\n\tconst routeForTechnology = `${API_HOST}?country=${country}&category=${\"technology\"}&pageSize=${PAGE_SIZE}&apikey=${API_KEY}`;\r\n\r\n\tconst getNewsFromEntertainment = await axios.get(routeForEntertainment);\r\n\tconst getNewsFromGeneral = await axios.get(routeForGeneral);\r\n\tconst getNewsForHealth = await axios.get(routeForHealth);\r\n\tconst getNewsForScience = await axios.get(routeForScience);\r\n\tconst getNewsForSport = await axios.get(routeForSport);\r\n\tconst getNewsForTechnology = await axios.get(routeForTechnology);\r\n\r\n\ttry {\r\n\t\taxios\r\n\t\t\t.all([\r\n\t\t\t\tgetNewsFromEntertainment,\r\n\t\t\t\tgetNewsFromGeneral,\r\n\t\t\t\tgetNewsForHealth,\r\n\t\t\t\tgetNewsForScience,\r\n\t\t\t\tgetNewsForSport,\r\n\t\t\t\tgetNewsForTechnology,\r\n\t\t\t])\r\n\t\t\t.then(\r\n\t\t\t\taxios.spread((...responses) => {\r\n\t\t\t\t\tsetNews({\r\n\t\t\t\t\t\tentertainment: responses[0].data.articles,\r\n\t\t\t\t\t\tgeneral: responses[1].data.articles,\r\n\t\t\t\t\t\thealth: responses[2].data.articles,\r\n\t\t\t\t\t\tscience: responses[3].data.articles,\r\n\t\t\t\t\t\tsport: responses[4].data.articles,\r\n\t\t\t\t\t\ttechnology: responses[5].data.articles,\r\n\t\t\t\t\t});\r\n\t\t\t\t})\r\n\t\t\t);\r\n\t} catch (error) {\r\n\t\tconsole.log(error);\r\n\t}\r\n};\r\n\r\nuseEffect(() => {\r\n\tgetNewsFromCategory();\r\n}, [country]);\r\n\r\n\r\n\tconst renderItem = ({ item }) => (\r\n\t\t<NewsCards\r\n\t\t\ttitle={item.title}\r\n\t\t\tdescription={item.description}\r\n\t\t\turlToImage={item.urlToImage}\r\n\t\t\tcontent={item.content}\r\n\t\t/>\r\n\t);\r\n\t\r\n\r\n\r\n\r\n\r\n\r\n\r\n\treturn <Text>HAHAH</Text>;\r\n}\r\n\r\nexport default Categories;\r\n"]},"metadata":{},"sourceType":"module"}