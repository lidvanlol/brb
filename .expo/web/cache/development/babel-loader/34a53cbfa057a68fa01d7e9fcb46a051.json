{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\filip\\\\Desktop\\\\news-app-react-native-main\\\\components\\\\Search.js\";\n\nimport React, { useState, useEffect } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport { useSelector } from \"react-redux\";\nimport axios from \"axios\";\nimport { NewsCards } from \"../components/NewsCards\";\n\nvar Search = function Search() {\n  var countryName = useSelector(function (state) {\n    return state.app.countryName;\n  });\n  var country = useSelector(function (state) {\n    return state.app.country;\n  });\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      searchValue = _useState2[0],\n      setSearchValue = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      searchResults = _useState4[0],\n      setSearchResults = _useState4[1];\n\n  var searchHandler = function searchHandler() {\n    var result;\n    return _regeneratorRuntime.async(function searchHandler$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(axios.get(\"https://newsapi.org/v2/top-headlines?country=\" + country + \"&q=\" + searchValue + \"&apiKey=538c9131d90042bca87ded5431fee3ea\"));\n\n          case 3:\n            result = _context.sent;\n\n            if (result && result.data) {\n              setSearchResults(result.data.articles);\n            }\n\n            _context.next = 10;\n            break;\n\n          case 7:\n            _context.prev = 7;\n            _context.t0 = _context[\"catch\"](0);\n            console.log(_context.t0);\n\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 7]], Promise);\n  };\n\n  var renderItem = function renderItem(_ref) {\n    var item = _ref.item;\n    return React.createElement(NewsCards, {\n      title: item.title,\n      description: item.description,\n      urlToImage: item.urlToImage,\n      content: item.content,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 3\n      }\n    });\n  };\n\n  useEffect(function () {\n    searchHandler();\n  }, [country]);\n  return React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 3\n    }\n  }, React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 4\n    }\n  }, \"Search top nes from \" + countryName + \" by term:\"), React.createElement(TextInput, {\n    type: \"text\",\n    placeholder: \"Search term...\",\n    onChange: function onChange(e) {\n      return setSearchValue(e.target.value);\n    },\n    onKeyDown: searchHandler,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 4\n    }\n  }), React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 4\n    }\n  }, searchResults ? searchResults.map(function (element, index) {\n    return React.createElement(FlatList, {\n      data: newsData,\n      renderItem: renderItem,\n      keyExtractor: function keyExtractor(item) {\n        return item.publishedAt;\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 7\n      }\n    });\n  }) : React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 6\n    }\n  }, \"There is no data for this term\")));\n};\n\nexport default Search;","map":{"version":3,"sources":["C:/Users/filip/Desktop/news-app-react-native-main/components/Search.js"],"names":["React","useState","useEffect","useSelector","axios","NewsCards","Search","countryName","state","app","country","searchValue","setSearchValue","searchResults","setSearchResults","searchHandler","get","result","data","articles","console","log","renderItem","item","title","description","urlToImage","content","e","target","value","map","element","index","newsData","publishedAt"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { View, Text, TextInput } from \"react-native\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nimport axios from \"axios\";\r\nimport { NewsCards } from \"../components/NewsCards\";\r\n\r\nconst Search = () => {\r\n\tconst countryName = useSelector((state) => state.app.countryName);\r\n\tconst country = useSelector((state) => state.app.country);\r\n\tconst [searchValue, setSearchValue] = useState(\"\");\r\n\tconst [searchResults, setSearchResults] = useState(null);\r\n\r\n\tconst searchHandler = async () => {\r\n\t\ttry {\r\n\t\t\tconst result = await axios.get(\r\n\t\t\t\t`https://newsapi.org/v2/top-headlines?country=${country}&q=${searchValue}&apiKey=538c9131d90042bca87ded5431fee3ea`\r\n\t\t\t);\r\n\t\t\tif (result && result.data) {\r\n\t\t\t\tsetSearchResults(result.data.articles);\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log(error);\r\n\t\t}\r\n\t};\r\n\tconst renderItem = ({ item }) => (\r\n\t\t<NewsCards\r\n\t\t\ttitle={item.title}\r\n\t\t\tdescription={item.description}\r\n\t\t\turlToImage={item.urlToImage}\r\n\t\t\tcontent={item.content}\r\n\t\t/>\r\n\t);\r\n\tuseEffect(() => {\r\n\t\tsearchHandler();\r\n\t}, [country]);\r\n\r\n\treturn (\r\n\t\t<View>\r\n\t\t\t<Text>{`Search top nes from ${countryName} by term:`}</Text>\r\n\t\t\t<TextInput\r\n\t\t\t\ttype=\"text\"\r\n\t\t\t\tplaceholder=\"Search term...\"\r\n\t\t\t\tonChange={(e) => setSearchValue(e.target.value)}\r\n\t\t\t\tonKeyDown={searchHandler}\r\n\t\t\t/>\r\n\t\t\t<View>\r\n\t\t\t\t{searchResults ? (\r\n\t\t\t\t\tsearchResults.map((element, index) => (\r\n\t\t\t\t\t\t<FlatList\r\n\t\t\t\t\t\t\tdata={newsData}\r\n\t\t\t\t\t\t\trenderItem={renderItem}\r\n\t\t\t\t\t\t\tkeyExtractor={(item) => item.publishedAt}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t))\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<Text>There is no data for this term</Text>\r\n\t\t\t\t)}\r\n\t\t\t</View>\r\n\t\t</View>\r\n\t);\r\n};\r\n\r\nexport default Search;\r\n"]},"metadata":{},"sourceType":"module"}